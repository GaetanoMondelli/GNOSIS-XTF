/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  1440002: {
    ETFIssuingChain: {
      address: "0x2872f4107E9234fC5d9066e5b30C175d94A66DEB",
      abi: [
        {
          inputs: [
            {
              internalType: "uint32",
              name: "_chainId",
              type: "uint32",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "_address",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "_quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint32",
                  name: "_chainId",
                  type: "uint32",
                },
                {
                  internalType: "address",
                  name: "_contributor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "_aggregator",
                  type: "address",
                },
              ],
              internalType: "struct TokenQuantity[]",
              name: "_requiredTokens",
              type: "tuple[]",
            },
            {
              internalType: "address",
              name: "_etfToken",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_etfTokenPerVault",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_vaultId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_address",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_quantity",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint32",
              name: "_chainId",
              type: "uint32",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_contributor",
              type: "address",
            },
          ],
          name: "Deposit",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "accountContributionsPerVault",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "addressToToken",
          outputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_quantity",
              type: "uint256",
            },
            {
              internalType: "uint32",
              name: "_chainId",
              type: "uint32",
            },
            {
              internalType: "address",
              name: "_contributor",
              type: "address",
            },
            {
              internalType: "address",
              name: "_aggregator",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_vaultId",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "chainId",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "vaultId",
                  type: "uint256",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "_address",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "_quantity",
                      type: "uint256",
                    },
                    {
                      internalType: "uint32",
                      name: "_chainId",
                      type: "uint32",
                    },
                    {
                      internalType: "address",
                      name: "_contributor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "_aggregator",
                      type: "address",
                    },
                  ],
                  internalType: "struct TokenQuantity[]",
                  name: "tokens",
                  type: "tuple[]",
                },
              ],
              internalType: "struct DepositInfo",
              name: "_depositInfo",
              type: "tuple",
            },
          ],
          name: "deposit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "etfToken",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "etfTokenPerVault",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getRequiredTokens",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "_address",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "_quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint32",
                  name: "_chainId",
                  type: "uint32",
                },
                {
                  internalType: "address",
                  name: "_contributor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "_aggregator",
                  type: "address",
                },
              ],
              internalType: "struct TokenQuantity[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_vaultId",
              type: "uint256",
            },
          ],
          name: "getVault",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "address",
                      name: "_address",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "_quantity",
                      type: "uint256",
                    },
                    {
                      internalType: "uint32",
                      name: "_chainId",
                      type: "uint32",
                    },
                    {
                      internalType: "address",
                      name: "_contributor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "_aggregator",
                      type: "address",
                    },
                  ],
                  internalType: "struct TokenQuantity[]",
                  name: "_tokens",
                  type: "tuple[]",
                },
                {
                  internalType: "enum VaultState",
                  name: "state",
                  type: "uint8",
                },
              ],
              internalType: "struct Vault",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getVaultStates",
          outputs: [
            {
              internalType: "enum VaultState[]",
              name: "",
              type: "uint8[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "_origin",
              type: "uint32",
            },
            {
              internalType: "bytes32",
              name: "_sender",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "_message",
              type: "bytes",
            },
          ],
          name: "handle",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "requiredTokens",
          outputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_quantity",
              type: "uint256",
            },
            {
              internalType: "uint32",
              name: "_chainId",
              type: "uint32",
            },
            {
              internalType: "address",
              name: "_contributor",
              type: "address",
            },
            {
              internalType: "address",
              name: "_aggregator",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_vaultId",
              type: "uint256",
            },
            {
              internalType: "enum VaultState",
              name: "_state",
              type: "uint8",
            },
          ],
          name: "setVaultState",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sideChainLock",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "vaults",
          outputs: [
            {
              internalType: "enum VaultState",
              name: "state",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    MockAggregator: {
      address: "0xF1ab521Ba394C38A7e21355672F257F34cA9De58",
      abi: [
        {
          inputs: [
            {
              internalType: "int256",
              name: "_price",
              type: "int256",
            },
            {
              internalType: "uint8",
              name: "_decimals",
              type: "uint8",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "description",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint80",
              name: "_roundId",
              type: "uint80",
            },
          ],
          name: "getRoundData",
          outputs: [
            {
              internalType: "uint80",
              name: "roundId",
              type: "uint80",
            },
            {
              internalType: "int256",
              name: "answer",
              type: "int256",
            },
            {
              internalType: "uint256",
              name: "startedAt",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "updatedAt",
              type: "uint256",
            },
            {
              internalType: "uint80",
              name: "answeredInRound",
              type: "uint80",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "latestRoundData",
          outputs: [
            {
              internalType: "uint80",
              name: "roundId",
              type: "uint80",
            },
            {
              internalType: "int256",
              name: "answer",
              type: "int256",
            },
            {
              internalType: "uint256",
              name: "startedAt",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "updatedAt",
              type: "uint256",
            },
            {
              internalType: "uint80",
              name: "answeredInRound",
              type: "uint80",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {
        decimals:
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        description:
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        getRoundData:
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        latestRoundData:
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        version:
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
      },
    },
    SimpleERC20: {
      address: "0xD2d281277fA7A382dAA39ffee3dA562aFe0526d3",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "initialSupply",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "setOwner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        allowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        approve: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        balanceOf: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        decimals: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        decreaseAllowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        increaseAllowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        name: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        symbol: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        totalSupply: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        transfer: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        transferFrom: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
      },
    },
  },
  11155111: {
    ETFLockingChain: {
      address: "0x08a758eB8ba70b6b5Df483087F293cD0311b7258",
      abi: [
        {
          inputs: [
            {
              internalType: "uint32",
              name: "_chainId",
              type: "uint32",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "_address",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "_quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint32",
                  name: "_chainId",
                  type: "uint32",
                },
                {
                  internalType: "address",
                  name: "_contributor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "_aggregator",
                  type: "address",
                },
              ],
              internalType: "struct TokenQuantity[]",
              name: "_requiredTokens",
              type: "tuple[]",
            },
            {
              internalType: "address",
              name: "_outbox",
              type: "address",
            },
            {
              internalType: "address",
              name: "_securityModule",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_vaultId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_address",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_quantity",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint32",
              name: "_chainId",
              type: "uint32",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_contributor",
              type: "address",
            },
          ],
          name: "Deposit",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "accountContributionsPerVault",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "addressToToken",
          outputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_quantity",
              type: "uint256",
            },
            {
              internalType: "uint32",
              name: "_chainId",
              type: "uint32",
            },
            {
              internalType: "address",
              name: "_contributor",
              type: "address",
            },
            {
              internalType: "address",
              name: "_aggregator",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "bridge",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "chainId",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "vaultId",
                  type: "uint256",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "_address",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "_quantity",
                      type: "uint256",
                    },
                    {
                      internalType: "uint32",
                      name: "_chainId",
                      type: "uint32",
                    },
                    {
                      internalType: "address",
                      name: "_contributor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "_aggregator",
                      type: "address",
                    },
                  ],
                  internalType: "struct TokenQuantity[]",
                  name: "tokens",
                  type: "tuple[]",
                },
              ],
              internalType: "struct DepositInfo",
              name: "_depositInfo",
              type: "tuple",
            },
          ],
          name: "depositAndNotify",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getRequiredTokens",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "_address",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "_quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint32",
                  name: "_chainId",
                  type: "uint32",
                },
                {
                  internalType: "address",
                  name: "_contributor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "_aggregator",
                  type: "address",
                },
              ],
              internalType: "struct TokenQuantity[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_vaultId",
              type: "uint256",
            },
          ],
          name: "getVault",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "address",
                      name: "_address",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "_quantity",
                      type: "uint256",
                    },
                    {
                      internalType: "uint32",
                      name: "_chainId",
                      type: "uint32",
                    },
                    {
                      internalType: "address",
                      name: "_contributor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "_aggregator",
                      type: "address",
                    },
                  ],
                  internalType: "struct TokenQuantity[]",
                  name: "_tokens",
                  type: "tuple[]",
                },
                {
                  internalType: "enum VaultState",
                  name: "state",
                  type: "uint8",
                },
              ],
              internalType: "struct Vault",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getVaultStates",
          outputs: [
            {
              internalType: "enum VaultState[]",
              name: "",
              type: "uint8[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "_origin",
              type: "uint32",
            },
            {
              internalType: "bytes32",
              name: "_sender",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "_message",
              type: "bytes",
            },
          ],
          name: "handle",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "mainChainLock",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "requiredTokens",
          outputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_quantity",
              type: "uint256",
            },
            {
              internalType: "uint32",
              name: "_chainId",
              type: "uint32",
            },
            {
              internalType: "address",
              name: "_contributor",
              type: "address",
            },
            {
              internalType: "address",
              name: "_aggregator",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "sideChainLock",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "vaults",
          outputs: [
            {
              internalType: "enum VaultState",
              name: "state",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    SimpleERC20: {
      address: "0x2C5e23Cdbff221B707D1a42577764586791B5074",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "initialSupply",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "setOwner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        allowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        approve: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        balanceOf: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        decimals: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        decreaseAllowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        increaseAllowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        name: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        symbol: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        totalSupply: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        transfer: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        transferFrom: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
